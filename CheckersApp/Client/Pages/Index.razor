@page "/play"

@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Authorization;
@inject AuthenticationStateProvider AuthenticationStateProvider
@code{
    //[CascadingParameter]
    //private Task<AuthenticationStateProvider> _authState { get; set; }
    //  private AuthenticationStateProvider authState;

    HubConnection hubConnection = new HubConnectionBuilder()
    .WithUrl("https://localhost:44303/connect")
    .Build();

    protected override async Task OnInitializedAsync()
    {
        await RefreshTables();
    }

    bool inGame = false;

    async Task RefreshTables()
    {
        HttpClient client = new HttpClient();
        tables = await client.GetFromJsonAsync<List<string>>("https://localhost:44303/api/GetTables");
        names = await client.GetFromJsonAsync<List<KeyValuePair<string, string>>>("https://localhost:44303/api/GetNames");
    }

    async Task CreateGame()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        playerName = user.Identity.Name;

        await hubConnection.StartAsync();
        tableId = Guid.NewGuid().ToString();

        await hubConnection.SendAsync("JoinTable", tableId, playerName);
        inGame = true;
    }

    async Task JoinGame(string tableId)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        playerName = user.Identity.Name;

        await hubConnection.StartAsync();
        this.tableId = tableId;
        isWhite = false;
        await hubConnection.SendAsync("JoinTable", tableId, playerName);
        inGame = true;
    }
    string playerName = "";
    string tableId = "";
    //  string userName = "";
    List<string> tables = new List<string>();
    List<KeyValuePair<string, string>> names = new List<KeyValuePair<string, string>>();
    bool isWhite = true;
}
@if (!inGame) {<h1 class="pageheader">Dołącz do gry</h1> }
    
<AuthorizeView>
    <Authorized>
        @if (inGame)
        {
            <Checkerboard HubConnection="hubConnection" TableId="@tableId" playerName="@playerName" IsWhitePlayer="isWhite" />
        }
        else
        {
            <button @onclick="CreateGame" class="btn btn-primary btn-lg" style="padding:15px;margin-top:20px;">Stwórz grę</button><br />
            @foreach (string table in tables)
            {
                <button @onclick="() => JoinGame(table)" class="btn btn-primary btn-lg" style="padding:15px;margin-top:20px;">Zagraj z @names.First(r => r.Key == table).Value</button><br />
            }
        }
    </Authorized>
    <NotAuthorized>
        <p><a href="/Identity/Account/Login">Sign in</a> to see this page.</p>
    </NotAuthorized>
</AuthorizeView>